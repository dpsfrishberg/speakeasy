<html>
	<head>
		<title>Speakeasy</title>
		<link rel="stylesheet" type="text/css" href="/media/speakeasy.css" />
		<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
		<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"></script>
		<script type="text/javascript" src="/media/knockout-2.1.0.js"></script>
		<script type="text/javascript" src="/media/speakeasy.js"></script>
		<script type= "text/javascript" src="/media/jquery.isotope.min.js"></script>

		

	</head>
	<body>
		
		<div id="main">
		<div id="header">
			<img alt="S" id= "Sletter" src="http://i.imgur.com/XtqDmB2.png"/>
			<span id="title">peakeasy</span>
			{% if anonymous %}
				<a id="login_button" href="/login">Log in</a>
			{% else %}
				<a id="logout_button" href="/logout">Log out</a>
			{% endif %}			
		</div>
		<div id="content">
			<h2>Article Title</h2>
			<hr>
			<div id="article-1" class="article">
				<div id="nodes" data-bind="foreach: articleNodes">
				   <div data-bind="attr: {id: node_display_id, class: node_class}">
					<p class="node-content" data-bind="text: content">
					</p>
					<a class="node-button" href="#"><span class="node-num-comments" data-bind="text: num_comments"></span></a>
					<div class="clear"></div>
				   </div>
				</div>
			</div>
		</div>
		<!--<div id="breadcrumb">
				<h2>Your Selections</h2>
				<hr>
				<div id="breadcrumb-inner" data-bind="foreach: activeTrail">
					<div class="breadcrumb-node" data-bind="attr: {id: node_display_id}">
						
						<p class="node-content" data-bind="text: content">
						</p>
						<a class="node-button" href="#"><span class="node-num-comments" data-bind="text: num_comments"></span></a>
						<div class="clear"></div>
						
					</div>
					
				</div>
				<div id="active-node" data-bind="with: _activeNode">
					<div id="active-node-content" data-bind="text: content"></div>
				</div>
			</div>-->
			<div id="comments" >
				 <div id="options">
       <div class="option-combo">
      <h2>Filter:</h2>
      <ul id="filter" class="option-set clearfix" data-option-key="filter">
        <li><a href="#show-all" data-option-value="*" class="selected button">show all</a></li>
        <li><a class = "button" href="#elements" data-option-value=".element:not(.feature)">elements</a></li>
        <li><a class = "button" href="#features" data-option-value=".poetry">features</a></li>
        <li><a class = "button" href="#examples" data-option-value=".fiction">examples</a></li>
      </ul>
    </div>
       <div class="option-combo">
      <h2>Layout: </h2>
      <ul id="layouts" class="option-set clearfix" data-option-key="layoutMode">
        <li><a href="#masonry" data-option-value="masonry" class="selected">masonry</a></li>
        <li><a href="#fitRows" data-option-value="fitRows">fitRows</a></li>
        <li><a href="#straightDown" data-option-value="straightDown">straightDown</a></li>
      </ul>
    </div>
    </div>
				<div id="breadcrumb">
				<h2>Your Selections</h2>
				<hr>
				<div id="breadcrumb-inner" data-bind="foreach: activeTrail">
					<div class="breadcrumb-node item" data-bind="attr: {id: node_display_id}">
						
						<p class="node-content" data-bind="text: content">
						</p>
						<a class="node-button" href="#"><span class="node-num-comments" data-bind="text: num_comments"></span></a>
						<div class="clear"></div>
						
					</div>
					
					
				</div>
				<div id="active-node" data-bind="with: _activeNode">
					<div id="active-node-content" data-bind="text: content"></div>
				</div>
			</div>
				<h2>Comments</h2>
				<hr>
				
					
				<div id="existing-comments" data-bind="foreach: activeComments">
					
					<div class="comment" data-bind="attr: {id: comment_display_id}">
						<div class="comment-user" data-bind="with: user"><span data-bind="text: first_name + '&#151;'"></span></div>
						<div class="comment-nodes" data-bind="foreach: nodes">
							<div class="node" data-bind="attr: {id: node_display_id}">
								<p class="node-content" data-bind="text: content">
								</p>
								<a class="node-button" href="#"><span class="node-num-comments" data-bind="text: num_comments"></span></a>
								<div class="clear"></div>
							</div>
						</div>
						<div class="clear"></div>
					</div>
					
				</div>
		<!--<div class="comment-submit-form" data-bind="with: _activeNode">
					<label data-bind="attr: {for: node_textarea_id}">Leave a response</label>
					<p class="help">Separate your thoughts using the enter button. Your comment will be split up for others to respond to.</p>
					<textarea data-bind="attr: {id: node_textarea_id, name: node_textarea_id}" ></textarea>
					<input type="submit" data-bind="attr: {id: node_submit_id, name: node_submit_id}" value="Submit"/>
					<div class="clear"></div>
				</div>-->
				
			</div>
			<div class="clear"></div>
		</div>
		
		

		
  		
<!--		
  <script>
    $(function(){
    
      var $container = $('#existing-comments');
      
    
      $container.isotope({
	itemSelector: '.item',
        masonry: {
          columnWidth: 100
        },
        sortBy: 'number',
        getSortData: {
          number: function( $elem ) {
            var number = $elem.hasClass('element') ? 
              $elem.find('.number').text() :
              $elem.attr('data-number');
            return parseInt( number, 10 );
          },
          alphabetical: function( $elem ) {
            var name = $elem.find('.name'),
                itemText = name.length ? name : $elem;
            return itemText.text();
          }
        }
      });
    
      
      var $optionSets = $('#options .option-set'),
          $optionLinks = $optionSets.find('a');

      $optionLinks.click(function(){
        var $this = $(this);
        // don't proceed if already selected
        if ( $this.hasClass('selected') ) {
          return false;
        }
        var $optionSet = $this.parents('.option-set');
        $optionSet.find('.selected').removeClass('selected');
        $this.addClass('selected');
  
        // make option object dynamically, i.e. { filter: '.my-filter-class' }
        var options = {},
            key = $optionSet.attr('data-option-key'),
            value = $this.attr('data-option-value');
        // parse 'false' as false boolean
        value = value === 'false' ? false : value;
        options[ key ] = value;
        if ( key === 'layoutMode' && typeof changeLayoutMode === 'function' ) {
          // changes in layout modes need extra logic
          changeLayoutMode( $this, options )
        } else {
          // otherwise, apply new options
          $container.isotope( options );
        }
        
        return false;
      });


    
      // Sites using Isotope markup
      var $sites = $('#sites'),
          $sitesTitle = $('<h2 class="loading"><img src="http://i.imgur.com/qkKy8.gif" />Loading sites using Isotope</h2>'),
          $sitesList = $('<ul class="clearfix"></ul>');
        
      $sites.append( $sitesTitle ).append( $sitesList );

      $sitesList.isotope({
        layoutMode: 'masonry',
        cellsByRow: {
          columnWidth: 290,
          rowHeight: 400
        }
      });
    
      var ajaxError = function(){
        $sitesTitle.removeClass('loading').addClass('error')
          .text('Could not load sites using Isotope :(');
      };
    
      
        
          var $items = $( items.join('') )
            .addClass('.breadcrumb-node');
            
          // set random number for each item
          $items.each(function(){
            $(this).attr('data-number', ~~( Math.random() * 100 + 15 ));
          });
        
          $items.imagesLoaded(function(){
            $sitesTitle.removeClass('loading').text('Sites using Isotope');
            $container.append( $items );
            $items.each(function(){
              var $this = $(this),
                  itemHeight = Math.ceil( $this.height() / 120 ) * 120 - 10;
              $this.height( itemHeight );
            });
            $container.isotope( 'insert', $items );
          });
        
        });
    
    
    });
  </script>
	
	  <script>
    $('#existing-comments').isotope( {
        itemSelector : '.item',
        layoutMode : 'masonry',
        
    });
    //$('#existing-comments').isotope({
    //    masonry: {
    //        columnWidth: 
    //    }
    //});
  </script>	
		-->
		
<script type ="text/javascript" >
    
    $('#existing-comments').isotope({
      itemSelector: '.comment'
    });
    
      $('#existing-comments').isotope({
	masonry: {
		      columnWidth: 100

	}
    });
      
        $('#existing-comments').isotope({
      isAnimated: true
    });
	//$('.comment-submit-form').appendTo($('.comment:last-of-type'));
	//
	//

</script>
		
		
		
	</body>
</html>
